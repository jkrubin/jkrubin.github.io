{"version":3,"sources":["Assets/TableForTwo/dash_1.PNG","Assets/TableForTwo/profile_1.PNG","Assets/TableForTwo/match_3.PNG","Assets/TableForTwo/chat_2.PNG","Assets/TableForTwo/homepage_1.PNG","Assets/RentSFSU/rentSFSU_1.png","Assets/PlaneTank/PlaneGame_2.png","Assets/PlaneTank/TankGame_1.png","Assets/PlaneTank/TankGame_3.png","Assets/TableForTwo/homepage_3.PNG","Assets/TableForTwo/dash_2.PNG","Assets/TableForTwo/match_1.PNG","Assets/TableForTwo/match_2.PNG","Assets/RentSFSU/rentSFSU_2.png","Assets/RentSFSU/rentSFSU_3.png","Assets/RentSFSU/rentSFSU_4.png","Assets/PlaneTank/PlaneGame_4.png","Assets/AutoMail/Process_1.PNG","Assets/AutoMail/Process_2.PNG","Assets/arrow.png","logo.svg","Assets/postman.PNG","Assets/AutoMail/Document.PNG","Assets/AutoMail/Fields.PNG","Assets/TableForTwo/homepage_2.PNG","Assets/TableForTwo/chat_1.PNG","Assets/PlaneTank/PlaneGame_1.png","Assets/hamburger.png","Assets/portrait.jpeg","Components/ParalaxBackground.js","Components/ParalaxSlider.js","Components/Resume.js","Components/Carousel.js","Components/Projects.js","Components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Tile","React","Component","props","_this5","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","front","image","back","next","flipped","flipCard","bind","assertThisInitialized","prevProps","setState","prevState","_this6","react_default","a","createElement","className","onClick","nextCallback","index","id","src","style","visibility","backgroundImage","concat","backgroundRepeat","backgroundSize","ParalaxSlider","_this","current","images","img","require","reset","setNext","_this2","interval","setInterval","element","document","getElementById","classList","remove","nextSlide","length","setTimeout","add","clearInterval","transform","Resume","target","href","Carousel","slideWidth","querySelector","clientWidth","slides","trans","prevSlide","_this3","map","slide","i","key","transition","desc","Projects","projects","header","project","lib_default","Components_Carousel","refs","ref","name","setLinks","HomePage","links","openMenu","toggleMenu","closeMenu","newLinks","linkDisplay","link","dropdownDisplay","Components_ParalaxSlider","maxWidth","Components_Resume","Components_Projects","App","Components_HomePage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e83ada7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dash_1.11ffd2f4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/profile_1.4ff3cd60.PNG\";","module.exports = __webpack_public_path__ + \"static/media/match_3.cff4c068.PNG\";","module.exports = __webpack_public_path__ + \"static/media/chat_2.88cb86b5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/homepage_1.0a21c005.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rentSFSU_1.2357edb9.png\";","module.exports = __webpack_public_path__ + \"static/media/PlaneGame_2.be8f0350.png\";","module.exports = __webpack_public_path__ + \"static/media/TankGame_1.a1c71abc.png\";","module.exports = __webpack_public_path__ + \"static/media/TankGame_3.5784ed8a.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage_3.c0c0bff5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/dash_2.b55bab41.PNG\";","module.exports = __webpack_public_path__ + \"static/media/match_1.799d58bd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/match_2.63a9b0a3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/rentSFSU_2.38dde8c6.png\";","module.exports = __webpack_public_path__ + \"static/media/rentSFSU_3.33f6cdd2.png\";","module.exports = __webpack_public_path__ + \"static/media/rentSFSU_4.2daa063b.png\";","module.exports = __webpack_public_path__ + \"static/media/PlaneGame_4.b7e8e981.png\";","module.exports = __webpack_public_path__ + \"static/media/Process_1.d9157a59.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Process_2.d95158e3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/arrow.a8e199ec.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/postman.dd4aaba4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Document.eb13baaa.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Fields.5950a0a8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/homepage_2.c35b9f19.PNG\";","module.exports = __webpack_public_path__ + \"static/media/chat_1.4b22da72.PNG\";","module.exports = __webpack_public_path__ + \"static/media/PlaneGame_1.83c4f28e.png\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.d22c18d9.png\";","module.exports = __webpack_public_path__ + \"static/media/portrait.f6660944.jpeg\";","import React from \"react\"\nclass ParalaxBackground extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\ttestproject: [\n    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_3.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/dash_1.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/dash_2.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/profile_1.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/match_1.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/match_2.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/match_3.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/chat_2.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_1.PNG\")},\n\t    \t\t{img: require(\"../Assets/RentSFSU/rentSFSU_1.png\")},\n    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_2.png\")},\n    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_3.png\")},\n    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_4.png\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_2.png\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_4.png\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/TankGame_1.png\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/TankGame_3.png\")},\n\n\t\t    \t\t\n\t\t    ],\n\t\t    tiles: [0,0,0,0,0,0,0,0],\n\t\t    width: window.innerWidth,\n\t\t    freeImages: [],\n\t\t}\n\t\tlet freeImages = this.state.testproject.map((content, index) => {\n\t\t\treturn index\n\t\t})\n\t\tthis.state.freeImages = freeImages\n\n\t\tthis.setNext = this.setNext.bind(this)\n\t\tthis.updateWindowDimensions = this.updateWindowDimensions.bind(this)\n\t\tthis.initTiles = this.initTiles.bind(this)\n\t}\n\tcomponentDidMount(){\n\t\tthis.initTiles()\n\t\tthis.updateWindowDimensions();\n\t\twindow.addEventListener('resize', this.updateWindowDimensions);\n\t\tthis.interval = setInterval(() => {this.setNext()}, 5000)\n\t}\n\tcomponentWillUnmount(){\n \t\twindow.removeEventListener('resize', this.updateWindowDimensions);\n\t\tclearInterval(this.interval);\n\t}\n\tupdateWindowDimensions() {\n\t\t//XOR check of state vs window only triggers on media size change\n\t\tif((this.state.width < 1350)? !(window.innerWidth <1350): (window.innerWidth <1350)){\n\t\t\tlet freeImagesTemp = this.state.freeImages.slice()\n\t\t\tlet tilesTemp = this.state.tiles.slice()\n\t\t\t//IF WINDOW GETS BIGGER fill in new squares\n\t\t\tif(window.innerWidth > 1350){\n\t\t\t\tfor(let i = 6; i < 8; i++){\n\t\t\t\t\tlet randomImage = Math.floor(Math.random() * (freeImagesTemp.length - 1))\n\t\t\t\t\ttilesTemp[i] = freeImagesTemp[randomImage]\n\t\t\t\t\tfreeImagesTemp = freeImagesTemp.filter((img) =>{\n\t\t\t\t\t\treturn img !== tilesTemp[i]\n\t\t\t\t\t})\n\t\t\t\t}\t\t\t\n\t\t\t\tthis.setState({tiles: tilesTemp, freeImages: freeImagesTemp, width: window.innerWidth})\t\t\n\t\t\t//IF WINDOW GETS SMALLER free up square's images getting pushed out\n\t\t\t}else{\n\t\t\t\tfor(let i = 6; i < 8; i++){\n\t\t\t\t\tfreeImagesTemp.push(tilesTemp[i])\n\t\t\t\t\tthis.setState({freeImages: freeImagesTemp, width: window.innerWidth})\t\t\n\t\t\t\t}\t\n\t\t\t}\n\t\t}else{\n\t\t\tthis.setState({ width: window.innerWidth});\n\t\t}\n\t}\n\tinitTiles(){\n\t\tlet freeImagesTemp = this.state.freeImages.slice()\n\t\tlet tileNum = this.state.width > 1350? 8: 6\n\t\tlet newTiles = this.state.tiles.map((tile, index)=> {\n\t\t\tlet randomFreeImage = Math.floor(Math.random() * (freeImagesTemp.length))\n\t\t\tlet image = freeImagesTemp[randomFreeImage]\n\t\t\t//Don't count tiles that are off screen\n\t\t\tif(index < tileNum){\n\t\t\t\tfreeImagesTemp = freeImagesTemp.filter((img) =>{\n\t\t\t\t\treturn img !== image\n\t\t\t\t})\n\t\t\t\tconsole.log({image})\n\t\t\t\treturn image\n\t\t\t}else{\n\t\t\t\treturn image\n\t\t\t}\n\t\t})\n\t\tconsole.log(newTiles)\n\t\tthis.setState({freeImages: freeImagesTemp, tiles:newTiles})\n\t}\n\tsetNext(index){\n\t\tlet tileNum = this.state.width > 1350? 8: 6\n\t\tlet randomTile = index? index: Math.floor(Math.random() * (tileNum))\n\t\tlet randomImage = Math.floor(Math.random() * (this.state.freeImages.length - 1))\n\t\tthis.setState((prevState) => {\n\t\t\tlet newTiles = prevState.tiles\n\t\t\tlet newFreeImages = prevState.freeImages\n\t\t\tnewFreeImages.push(newTiles[randomTile])\n\t\t\tnewTiles[randomTile] = prevState.freeImages[randomImage]\n\t\t\tnewFreeImages = newFreeImages.filter((img) =>{\n\t\t\t\treturn img !== newTiles[randomTile]\n\t\t\t})\n\t\t\treturn {tiles: newTiles, freeImages: newFreeImages}\n\t\t})\n\t}\n\n\trender(){\n\n\t\t// let pictures = this.state.testproject.map((img) => {\n\t\t// \treturn(\n\t\t// \t\t<div className=\"image-element-class\">\n\t\t// \t\t\t<img src={img.img} />\n\t\t// \t\t</div>\n\t\t// \t)\n\t\t// })\n\t\t// let pictures = this.state.testproject.map((img) => {\n\t\t// \treturn(\n\t\t// \t\t<div className=\"image-element-class\">\n\t\t// \t\t\t<img src={require(img.img)} />\n\t\t// \t\t</div>\n\t\t// \t)\n\t\t// })\n\t\tlet tiles\n\t\tif(this.state.width > 1350){\n\t\t\ttiles = this.state.tiles.map((next, index) => {\n\t\t\t\treturn(<Tile \n\t\t\t\t\timage={this.state.testproject[next].img} \n\t\t\t\t\tnext={this.state.testproject[next].img} \n\t\t\t\t\tkey={index} \n\t\t\t\t\tindex={index} \n\t\t\t\t\tnextCallback={this.setNext} />)\n\t\t\t})\n\t\t}else{\n\t\t\ttiles = this.state.tiles.slice(0, 6).map((next, index) => {\n\t\t\t\treturn(<Tile \n\t\t\t\t\timage={this.state.testproject[next].img} \n\t\t\t\t\tnext={this.state.testproject[next].img} \n\t\t\t\t\tkey={index}\n\t\t\t\t\tindex={index} \n\t\t\t\t\tnextCallback={this.setNext} />)\n\t\t\t})\t\t\t\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"paralax-background\">\n\t\t\t\t<div className=\"background-content\">\n\t\t\t\t\t<div className=\"tile-box\">\n\t\t\t\t\t\t{tiles}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Tile extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tfront: props.image,\n\t\t\tback: props.next,\n\t\t\tflipped: false\n\t\t}\n\t\tthis.flipCard = this.flipCard.bind(this)\n\t}\n\tasync componentDidUpdate(prevProps){\n\t\tif(this.props.next !== this.state.front && this.props.next !== this.state.back){\n\t\t\tif(this.state.flipped){\n\t\t\t\tthis.setState({front: this.props.next})\n\t\t\t}else{\n\t\t\t\tthis.setState({back: this.props.next})\n\t\t\t}\n\t\t\tthis.flipCard()\n\t\t}\n\t\t// if(this.props.next !== this.state.front && this.props.next !== this.state.back){\n\t\t// \tvar nextImage = new Image()\n\t\t// \tnextImage.src = this.props.next\n\t\t// \tnextImage.onload = () => {\n\t\t// \t\tif(this.state.flipped){\n\t\t// \t\t\tthis.setState({front: nextImage.src})\n\t\t// \t\t}else{\n\t\t// \t\t\tthis.setState({back: nextImage.src})\n\t\t// \t\t}\n\t\t// \t\tthis.flipCard()\n\t\t// \t}\n\t\t// }\n\t}\n\tflipCard(){\n\t\tthis.setState((prevState) => {\n\t\t\treturn {flipped: !prevState.flipped}\n\t\t})\n\t}\n\trender(){\n\n\t\treturn(\n\t\t\t<div className=\"tile\" onClick={() => {this.props.nextCallback(this.props.index)}}>\n\t\t\t\t<div className=\"flip-card\">\n\t\t\t\t\t<div id=\"flip-box\" className={this.state.flipped? \"flip-card-inner flipped\": \"flip-card-inner\"}>\n\t\t\t\t\t\t<img src={this.state.front} style={{visibility: \"hidden\"}}/>\n\t\t\t\t\t\t<div className=\"flip-card-front\" style={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${this.state.front})`,\n\t\t\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\t\t\tbackgroundSize: \"cover\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flip-card-back\" style={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${this.state.back})`,\n\t\t\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\t\t\tbackgroundSize: \"cover\"\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default ParalaxBackground","import React from \"react\"\n\nclass ParalaxSlider extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tcurrent: 0,\n\t\t\tnext: 1,\n\t\t\timages: [\n\t\t\t\t{img: require(\"../Assets/AutoMail/Process_1.PNG\")},\n\t\t\t\t{img: require(\"../Assets/postman.PNG\")},\n\t\t\t\t{img: require(\"../Assets/AutoMail/Process_2.PNG\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_1.PNG\")},\n\t\t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_2.png\")},\n\t    \t\t{img: require(\"../Assets/RentSFSU/rentSFSU_1.png\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/dash_1.PNG\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/TankGame_1.png\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/chat_2.PNG\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_4.png\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/profile_1.PNG\")},\n   \t\t\t\t{img: require(\"../Assets/PlaneTank/TankGame_3.png\")},\n    \t\t\t{img: require(\"../Assets/TableForTwo/match_3.PNG\")},\n\t\t\t],\n\t\t\treset:false\n\t\t}\n\n\t\tthis.setNext = this.setNext.bind(this)\n\t}\n\tcomponentDidMount(){\n\t\tthis.interval = setInterval(() => {this.setNext()}, 10000)\n\t}\n\tsetNext(){\n \t\tvar element = document.getElementById(\"slider\");\n \t\telement.classList.remove(\"slider-animator\");\n\t\tthis.setState((prevState) => {\n\t\t\tlet nextSlide = (prevState.next + 1) % prevState.images.length\n\t\t\treturn {current: prevState.next, next: nextSlide, reset: !prevState.reset}\n\t\t})\n\t\tsetTimeout(function(){element.classList.add(\"slider-animator\")},1)\n\t}\n\tcomponentWillUnmount(){\n\t\tclearInterval(this.interval);\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"slider-background\">\n\t\t\t\t<div className=\"slider-container\"> \n\t\t\t\t\t<div id=\"slider\" className=\"slider slider-animator\" style={{transform: \"translateX(0)\"}}>\n\t\t\t\t\t\t<div className=\"current paralax-slide\" style={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${this.state.images[this.state.current].img})`,\n\t\t\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\t\t\tbackgroundSize: \"contain\"\n\t\t\t\t\t\t}}></div>\n\t\t\t\t\t\t<div className=\"next paralax-slide\" style={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${this.state.images[this.state.next].img})`,\n\t\t\t\t\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\t\t\t\t\tbackgroundSize: \"contain\"\n\t\t\t\t\t\t}}></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"border\">\n\t\t\t\t\t\t<div className=\"shadow-left\"></div>\n\t\t\t\t\t\t<div className=\"shadow-right\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"cover-text\">\n\t\t\t\t\t\t<h2>Joshua Rubin </h2> <h3>Find your Fullstack Engineer in O(1)</h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ParalaxSlider","import React from \"react\"\n\nclass Resume extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"resume\">\n\t\t\t\t<h2> Resume </h2>\n\t\t\t\t<ul>\n\t\t\t\t\t<h3 className=\"resume-header\">Experience</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li className='job-title'>Software Engineer - AKASA <span className='job-year'>2022 - 2024</span></li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Designed and produced a full stack (Typescript React, Python FastAPI) application that:</li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Automated validation of 50+ scrapers across hundreds of product expansions, streamlining and reducing deployment time by 80%, from 5 days down to 1.</li>\n\t\t\t\t\t\t\t\t<li>Created a one-stop frontend to query and visualize scrape results for both developers and non-engineers, saving hundreds of hours in debugging time.</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<li>Designed and implemented a fast-fail input validation on our API that audited requests with hundreds of permutations with friendly error messages, which previously took tens of hours across several teams.</li>\n\t\t\t\t\t\t\t<li>Refactored our hardest-to-maintain scraper and created a new architecture for our scrapers to be configurable by simple JSON or minimal code. This allowed a product expansion to be created and validated within one day with only one file, previously it took 5+ days and editing a ~10k line file.</li>\n\t\t\t\t\t\t\t<li>Worked with our Machine Learning department to create scene labeling in our scrapers that took our scene recognition from roughly 35% to near 100%.</li>\n\t\t\t\t\t\t\t<li>Created a scraper that uses LLMs to analyze serialized dom snapshots to provide guidance for scrapes that would otherwise require human decision/intervention and be impossible for a regular scraper. This project won our quarterly hackathon.</li>\n\t\t\t\t\t\t\t<li>Led our team in learning sessions to facilitate understanding of legacy code to identify scalability issues and streamline design.</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<li className='job-title'>Freelance Software Engineer <span className='job-year'>2018-2022</span></li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Upwork \"Top Rated\" - which is given to the top 10% of developers in terms of positive feedback ratings across many clients.</li>\n\t\t\t\t\t\t\t<li>Created a full backend and REST APIs for a financial tech stock monitoring software utilizing IEX and EOD stock APIs. Supported an admin-controlled list of 700+ stocks. Scraped nightly, analyzed, and ranked</li>\n\t\t\t\t\t\t\t<li>Fullstack work in React and Express.js, creating microservices linking different services like Jotform and Airtable</li>\n\t\t\t\t\t\t\t<li>Created remote telethon software to create live telethons where workers could track their calls and sales and compete for prizes</li>\n\t\t\t\t\t\t\t<li>Created payment managing software with Docusign and Stripe</li>\n\t\t\t\t\t\t\t<li>Fixed bugs and created new features for a custom wordpress themed website, including custom database metadata searches and homepage widgits</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3 className=\"resume-header\">Skills</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Programming languages and frameworks with the most experience:</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Typescript</li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>Frontend - React, Next.js, Redux</li>\n\t\t\t\t\t\t\t\t<li>Backend - Express.js, Sequelize</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<li>Python</li>\n\t\t\t\t\t\t\t<li>SQL and noSQL databases</li>\n\t\t\t\t\t\t\t<li>Git CI/CD</li>\n\t\t\t\t\t\t\t<li>AWS kubernetes</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<li>I have worked with many more technologies and am always learning new programming languages and concepts that best fit the current project</li>\n\t\t\t\t\t\t<li>Code samples and previous projects can be found on my <a target=\"_blank\" href=\" https://github.com/jkrubin\">Github</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h3 className=\"resume-header\">Education</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>San Francisco State University</li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Bachelor of Science in Computer Science</li>\n\t\t\t\t\t\t\t<li>3.69 GPA, 8 semesters on dean's list </li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>The Urban School of San Francisco </li>\n\t\t\t\t\t</ul>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Resume","import React from \"react\"\n\nclass Carousel extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tslides: props.slides,\n\t\t\tindex: 0,\n\t\t\ttrans: 0,\n\t\t}\n\t\tthis.nextSlide = this.nextSlide.bind(this)\n\t\tthis.prevSlide = this.prevSlide.bind(this)\n\t\t\t\n\t}\n\tnextSlide(){\n\t\tthis.setState((prevState) => {\n\t\t\tif(prevState.index === prevState.slides.length - 1 ){\n\t\t\t\treturn({index:0, trans:0})\n\t\t\t}else{\n\t\t\t\treturn({index: prevState.index + 1, trans: prevState.trans - this.slideWidth()})\n\t\t\t}\n\t\t})\n\t}\n\tprevSlide(){\n\t\tthis.setState((prevState) => {\n\t\t\tif(prevState.index === 0 ){\n\t\t\t\treturn({index:prevState.slides.length - 1, trans: -(this.slideWidth() * (prevState.slides.length - 1))})\n\t\t\t}else{\n\t\t\t\treturn({index: prevState.index - 1, trans: prevState.trans + this.slideWidth()})\n\t\t\t}\n\t\t})\n\t}\n\tslideWidth = () => {\n\t\treturn document.querySelector('.slide').clientWidth\n\t}\n\trender(){\n\t  \tconst slides = this.state.slides.map((slide, i) => {\n\t  \t\treturn(\n\t  \t\t\t<div key={i} className=\"slide\">\n\t  \t\t\t\t<div className=\"img-wrapper\">\n\t\t  \t\t\t\t<img src={slide.img} />\n\t  \t\t\t\t</div>\n\t  \t\t\t</div>\n\t  \t\t)\n\t  \t})\n\n\t\treturn(\n\t\t\t<div className=\"carousel-container\">\n\t\t\t\t<div className=\"carousel\">\n\t\t\t\t\t<div className=\"slide-wrapper\" style={{\n\t\t\t            transform: `translateX(${this.state.trans}px)`,\n\t\t\t            transition: 'transform ease-out 0.5s'\n\t         \t\t}}>\n\t         \t\t\n\t         \t\t{slides}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"carousel-desc\">\n\t\t\t\t\t\t<div className=\"desc-inner\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{this.state.slides[this.state.index].desc}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"arrow prev-arrow\" onClick={this.prevSlide} >\n\t\t\t\t\t\t<img src={require(\"../Assets/arrow.png\")} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"arrow next-arrow\" onClick={this.nextSlide}>\n\t\t\t\t\t\t<img src={require(\"../Assets/arrow.png\")} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"current-slide\">\n\t\t\t\t\t\t{this.state.index + 1} of {slides.length}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Carousel","import React from \"react\"\nimport Carousel from \"./Carousel\"\nimport ScrollableAnchor from 'react-scrollable-anchor'\nclass Projects extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t    projects: [\n\t\t\t\t{\n\t\t\t\t\theader: \"Auto Mail\",\n\t\t\t\t\tdesc: \"I created an application that can automate reading and categorizing emails powered by OpenAI. I used Typescript React and Express.js to create a fullstack application that allows a user to train their AI assistant to categorize and extract data from their incoming mail\",\n\t\t\t\t\tslides: [\n\t\t\t\t\t\t{img: require(\"../Assets/AutoMail/Document.PNG\"), desc: \"Users can define types of email they recieve called 'Document Types' Users explain to their assistant what kind of email this is so the AI can match it to incoming emails\"},\n\t\t\t\t\t\t{img: require(\"../Assets/AutoMail/Fields.PNG\"), desc: \"Users can create data fields to extract from their mail and link it to a Document Type, that way when the assistant matches a document type, it can pull out certain key information from the document\"},\n\t\t\t\t\t\t{img: require(\"../Assets/AutoMail/Process_1.PNG\"), desc: \"Users can upload documents or paste in email text for the assistant to parse. When mail is processed, the assistant will match the text to one of the document types and then extract the associated data from the text\"},\n\t\t\t\t\t\t{img: require(\"../Assets/AutoMail/Process_2.PNG\"), desc: \"Here we can seee the resulting JSON extracted from the email. From here, I am planning to add more features where this JSON can be customized and sent to any webhook of the user's choosing.\"}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theader: 'Stock Analyzer',\n\t\t\t\t\tdesc: \"I was hired by a startup and created a server to scrape and analyze over 700 stock symbols by cross referencing several 3rd party APIs and storing analysis in our database\"\n\t\t\t\t},\n\t\t    \t{\n\t\t    \t\theader: \"Table For Two\", \n\t\t    \t\tdesc: \"Table For Two is a web application for posting, searching, and matching with user created events. I built it full stack using ReactJS for the front end, and a NodeJS Express server using the 'Sequelize' ORM for the backend. I used Amazon Web Services to host the servers and a mySQL database. The app also uses Socket.io to implement real time chat rooms. It also uses the imgur APIs to host images for events, and stores profile pictures in base64 encoded BLOBs on the database, cropping and compressing using npm modules. Here are some features implemented in the site: \",\n\t\t    \t\tslides: [\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_1.PNG\"), desc: \"Homepage of Table For Two, featuring events added from different users than the current user. Events are shown in a Carousel.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_2.PNG\"), desc: \"Showing newest event in carousel.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/homepage_3.PNG\"), desc: \"Event display as user scrolls.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/dash_1.PNG\"), desc: \"Once logged in, a user can add/edit/delete their hosted events, and invite/uninvite people who 'Liked' their events. Events are stored in the database, where images are uploaded to imgur APIs and the URL is stored with the event\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/dash_2.PNG\"), desc: \"Form to create or edit an event\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/profile_1.PNG\"), desc: \"Users can update their profile, Profile images are base64 encoded, compressed, and cropped using 'imagemin' and 'sharp' node modules respectively.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/match_1.PNG\"), desc: \"Once logged in, user can 'Like' Bob's event and send a message.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/match_2.PNG\"), desc: \"Bob can see who liked his event once logged in.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/match_3.PNG\"), desc: \"Bob clicks on the user bubble to see full profile, and can invite user to join event.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/chat_1.PNG\"), desc: \"Once a user has matched with an event and been invited by the event creator, they are entered into a chat with everyone invited to that event. The chat logs can be stored in the database, but it is currently disabled. The chat works using the 'socket.io' package. The UI for the chat page is unfinished and still rough, but users can change chatrooms and view event details and chat members.\"},\n\t\t    \t\t\t{img: require(\"../Assets/TableForTwo/chat_2.PNG\"), desc: \"Chat sidebar folds down on click to reveal event info\"},\n\t\t    \t\t]\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\theader: \"News Polling Backend\", \n\t\t    \t\tdesc: (<p>RESTful API backend build with NodeJS Express server, sequelize ORM, and mySQL database, all deployed on AWS. Web application built for a client who wanted creatable polls on his website. Backend supports Create/Read/Update/Delete functionality for new questions with variable number of options, as well as users casting votes, and getting a map of votes mapped to the state the vote came from </p>),\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\theader: \"NodeJS RESTful API\", \n\t\t    \t\tdesc: (<p>I have created APIs for multiple web apps featuring: custom database, password encryption, java web token authentication and account verification, server side image storage and upload, and many more small details as the project requires. <br /> due to the privacy of the applications I will not post full source code, but sample code can be provided on request</p> ),\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\theader: \"Be'Chol Lashon Charity Website\", \n\t\t    \t\tdesc:(<p> various work (including custom plugins) for a Wordpress website. I created the backend for a custom search plugin to search the extensive archive database using WP_Query and custom metadata filters. I also made a custom plugin to handle pagination requests from all category pages and search pages. In addition to the plugins, I did various backend work and created numerous features</p>),\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\theader: \"RentSFSU\", \n\t\t    \t\tdesc: (<p> This project was made by a group of five developers as part of the capstone class for Computer Science majors. The website was created to match student renters with apartment renters.<br />    My role in this project was backend developer, mainly writing the model and controller for apartment listings. I also implemented google maps API to get the coordinates of apartments and used BLOBs to store images on the database.<br />    The website was written in PHP using an MVC framework  with a SQL database and hosted on Amazon web servers.<br/>    Here are some images illustrating the functionality of my backend contributions to the website: </p>),\n\t\t    \t\tslides: [\n\t\t    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_1.png\"), desc: \"RentSFSU homepage\"},\n\t\t    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_2.png\"), desc: \"Page displaying all relevant listings\"},\n\t\t    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_3.png\"), desc: \"Listing creation page\"},\n\t\t    \t\t\t{img: require(\"../Assets/RentSFSU/rentSFSU_4.png\"), desc: \"Using Google APIs to display approximate location of property, to maintain security of listing\"}\n\t\t    \t\t]\n\t\t    \t},\n\t\t    \t{\n\t\t    \t\theader: \"Tank and plane games\", \n\t\t    \t\tdesc: <p> The first large programming project I did was creating these two games in Java. Other than the existing image assets, the two games were built from scratch and share some reusable Java classes.<br />    Here are some screenshots of the two games:</p>,\n\t\t    \t\tslides: [\n\t\t    \t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_1.png\"), desc: \"Gameplay of the plane game\"},\n\t\t    \t\t\t{img: require(\"../Assets/PlaneTank/PlaneGame_2.png\"), desc: \"The game features randomly spawning enemies, and two player co-op to progress as far as possible until one player is out of health\"},\n\t\t    \t\t\t{img: require(\"../Assets/PlaneTank/TankGame_1.png\"), desc: \"Gameplay of the tank game\"},\n\t\t    \t\t\t{img: require(\"../Assets/PlaneTank/TankGame_3.png\"), desc: \"The game features player vs player combat, with destructable walls, splitscreen cameras, and a realtime minimap\"},\n\t\t\t\t\t]\n\t\t    \t},\n\t\t    ]\n\t\t}\n\t}\n\n\trender(){\n\t\tlet projects = this.state.projects.map((project, index) =>{\n\t\t\treturn(\n\t\t\t\t<div className=\"project-container\">\n\t\t\t\t\t<ScrollableAnchor id ={'project' + index}>\n\t\t\t\t\t\t<h3 className=\"project-header\">{project.header}</h3>\n\t\t\t\t\t</ScrollableAnchor>\n\t\t\t\t\t<p className=\"project-desc\">{project.desc}</p>\n\t\t\t\t\t{project.slides &&\n\t\t\t\t\t\t<Carousel slides={project.slides} />\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\tlet anchorLinks = this.state.projects.map((project, index) =>{\n\t\t\treturn(\n\t\t\t\t<a href={'#project' + index}> {project.header} </a>\n\t\t\t)\n\t\t})\n\t\tlet refs = this.state.projects.map((project, index) =>{\n\t\t\treturn({ref: '#project' + index, name: project.header})\n\t\t})\n\t\tthis.props.setLinks(refs)\n\t\treturn(\n\t\t\t<div className=\"projects\">\n\t\t\t\t<h2> Projects </h2>\n\t\t\t\t{projects}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Projects","import React from \"react\"\nimport ParalaxBackground from \"./ParalaxBackground\"\nimport ParalaxSlider from \"./ParalaxSlider\"\nimport Resume from \"./Resume\"\nimport Projects from \"./Projects\"\nimport ScrollableAnchor from 'react-scrollable-anchor'\n\nclass HomePage extends React.Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tlinks: [],\n\t\t\topenMenu: false\n\t\t}\n\t\tthis.setLinks = this.setLinks.bind(this)\n\t\tthis.toggleMenu = this.toggleMenu.bind(this)\n\t\tthis.closeMenu = this.closeMenu.bind(this)\n\t}\n\tsetLinks(newLinks){\n\t\tif(this.state.links.length === 0){\n\t\t\tthis.setState({links: newLinks})\n\t\t}\n\t}\n\ttoggleMenu(){\n\t\tthis.setState((prevState) =>{\n\t\t\treturn {openMenu: !prevState.openMenu}\n\t\t})\n\t}\n\tcloseMenu(){\n\t\tthis.setState({openMenu: false})\n\t}\n\trender(){\n\t\tlet linkDisplay = this.state.links.map((link) =>{\n\t\t\treturn(\n\t\t\t\t<li className=\"anchor-link\">\n\t\t\t\t\t<a href={link.ref}> {link.name} </a>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\tlet dropdownDisplay = this.state.links.map((link) =>{\n\t\t\treturn(\n\t\t\t\t<li className=\"hamburger-link\">\n\t\t\t\t\t<a href={link.ref} onClick={this.closeMenu}> {link.name} </a>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t\treturn(\n\t\t\t<div className=\"homepage\">\n\t\t\t\t<ParalaxSlider />\n\t\t\t\t<div className=\"content-container\">\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<div className={this.state.openMenu? \"anchor-menu open-menu\" : \"anchor-menu\"}>\n\t\t\t\t\t\t\t<img src={require('../Assets/hamburger.png')} \n\t\t\t\t\t\t\tonClick={this.toggleMenu}\n\t\t\t\t\t\t\tstyle={this.state.openMenu ? {transform: 'rotate(90deg)'} : {}}/>\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"dropdown-menu\" style={this.state.openMenu? {maxWidth: '1000px'} : {maxWidth: '0px'}}>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li className=\"hamburger-link\">\n\t\t\t\t\t\t\t\t\t<a href='#resume'> Resume </a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className=\"hamburger-link\">\n\t\t\t\t\t\t\t\t\t<a href='#projects'> Projects </a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<ul className=\"sub-menu\">\n\t\t\t\t\t\t\t\t\t{dropdownDisplay}\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</ul>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t\t<div className=\"profile\">\n\t\t\t\t\t\t\t<div className=\"prof-pic-container\">\n\t\t\t\t\t\t\t\t<img src={require('../Assets/portrait.jpeg')} className=\"prof-pic\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h1 id=\"name\">Joshua Rubin</h1>\n\t\t\t\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t\t\t\t<div className=\"about\">\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tAs a Fullstack Engineer, I pride myself on my ability to create elegant, robust solutions to unique problems while continually learning and growing. I have experience working in tech startups where I designed and implemented solutions to our toughest challenges. I have also worked with smaller clients, both creating new products and maintaining legacy codebases. I am a hard worker, good communicator, and will never settle on less than excellence!\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"sticky-sidebar\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li className=\"anchor-link\">\n\t\t\t\t\t\t\t\t\t\t\t<a href='#resume'> Resume </a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li className=\"anchor-link\">\n\t\t\t\t\t\t\t\t\t\t\t<a href='#projects'> Projects </a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<ul className='sub-menu'>\n\t\t\t\t\t\t\t\t\t\t\t{linkDisplay}\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"main\">\n\t\t\t\t\t\t\t<ScrollableAnchor id ='resume'>\n\t\t\t\t\t\t\t\t<Resume />\n\t\t\t\t\t\t\t</ScrollableAnchor>\n\t\t\t\t\t\t\t<ScrollableAnchor id ='projects'>\n\t\t\t\t\t\t\t\t<Projects setLinks = {this.setLinks}/>\n\t\t\t\t\t\t\t</ScrollableAnchor>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default HomePage","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './Components/HomePage'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HomePage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}